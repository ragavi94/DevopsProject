---
- name: enabling access to mvn without password 
  lineinfile:
    path: /etc/sudoers
    line: "jenkins ALL=(ALL) NOPASSWD: ALL"
  become: true

- name: Copy checkbox job build playbook
  template:
      src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/checkbox_build_deploy.yml"
      dest:  /var/lib/jenkins/checkbox_build_deploy.yml
  become: true

- name: Copy checkbox job build playbook's inventory
  template:
      src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/local_inventory"
      dest:  /var/lib/jenkins/local_inventory
  become: true

- name: Copy checkbox job builder script
  template:
      src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/checkboxio_job_create.yml"
      dest: /home/vagrant/jobs/checkbox_job.yml
  become: true

- name: Copy checkbox canary ob builder script
  template:
      src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/checkboxio_canary_job.yml"
      dest: /home/vagrant/jobs/checkboxio_canary_job.yml
  become: true

- name: Copy checkbox Production Server provision ansible playbook
  copy:
    src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/checkbox_provision.yml"
    dest: /var/lib/jenkins/checkbox_provision.yml
    owner: jenkins
    group: jenkins
    mode: 0666
  become: true

- name: Copy checkbox Provision Scripts
  copy:
      src: ~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/checkbox_provision
      dest: /home/vagrant/
  become: true

- name: Copy DO access token
  copy:
      src: ~/DevopsProject/milestone3/ansible_scripts/access
      dest: /home/vagrant/checkbox_provision/access
  become: true


- name: Copy checkbox deploy Scripts
  copy:
      src: ~/DevopsProject/milestone3/ansible_scripts/roles/deploy
      dest: /home/vagrant/
  become: true

- name: Copy checkbox canary job inventory editor script
  template:
      src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/write_canary_inventory.py"
      dest: /home/vagrant/deploy/write_canary_inventory.py
  become: true

- name: Copy checkbox marqdown job inventory editor script
  template:
      src: "~/DevopsProject/milestone3/ansible_scripts/roles/checkbox_create_job/templates/write_marqdown_inventory.py"
      dest: /home/vagrant/deploy/write_canary_inventory.py
  become: true

 
- name: create jobs
  shell: 'sudo jenkins-jobs --conf ~/jenkins_jobs.ini update ~/jobs'

- name: jenkins cli download
  get_url:
    url: '{{ jenkins_url }}/jnlpJars/jenkins-cli.jar'
    dest: /home/vagrant/jenkins-cli.jar
    timeout: 30
    mode: 0777
    owner: vagrant
    group: vagrant
  become: true

- name: Change StrictHostKeyChecking to no
  lineinfile: 
    path: /etc/ssh/ssh_config
    regexp: '#   StrictHostKeyChecking ask'
    line: '   StrictHostKeyChecking no'
  become: true

- name: changing config.xml
  lineinfile:
    path: /var/lib/jenkins/config.xml
    regexp: '    <denyAnonymousReadAccess>true</denyAnonymousReadAccess>'
    line: '    <denyAnonymousReadAccess>false</denyAnonymousReadAccess>'
  become: true

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  become: true

- name: Wait for jenkins to restart
  wait_for: 
    port: 8080
    delay: 30

- name: Install required packages
  become: yes
  with_items:
    - nginx
    - git
    - mongodb
    - python-pip
    - python3-setuptools
  apt:
    name: '{{item}}'
    state: latest
    update_cache: yes
    force: yes

- name: Install pip3
  shell: 'easy_install3 pip'
  become: true

- name: Install pymongo
  become: yes
  pip:
    name: pymongo
    state: latest

- name: dotenv environment install
  shell: "sudo npm install dotenv"

- name: Install Repository keys
  apt_key: state=present keyserver=keyserver.ubuntu.com id=2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
  become: yes

- name: Download MongoDB repository
  shell: 
    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
  become: yes

- name: Update and Upgrade
  apt:
    update_cache: yes
  become: true

- name: MongoDB Repo installation
  apt: name=mongodb-org update_cache=true cache_valid_time=600
  become: yes

- name: Set permissions for mongodb storage
  file: path=/data/db owner=vagrant group=mongodb mode=0775 state=absent
  become: yes

- name: Set permissions for mongodb storage
  file: path=/data/db owner=vagrant group=mongodb mode=0775 state=directory
  become: yes

#- name: start the mongod service
#  service: name=mongod state=started
#  become: yes

- name: add admin user
  mongodb_user: database=admin name="admin" password="admin" login_port=27017 state=present roles=userAdminAnyDatabase,readWriteAnyDatabase,dbAdminAnyDatabase,clusterAdmin
  become: yes
  ignore_errors: yes

#- name: restart mongod service
#  service: name=mongod state=restarted
#  become: yes

- name: setting environment variables
  lineinfile:
    path: /etc/environment
    insertafter: '^PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games" '
    line: "{{ item }}"
  with_items:
    - APP_PORT=3002
    - MONGO_IP=127.0.0.1
    - MONGO_USER={{ dbuser }}
    - MONGO_PASSWORD={{ dbpwd }}
    - MAIL_USER={{ mailuser }}
    - MAIL_PASSWORD={{ mailpwd }}
    - MAIL_SMTP='smtp.gmail.com'
  become: true

- name: set source
  sudo: no
  shell: source /etc/environment
  args:
    executable: /bin/bash

- name: kill existing process
  shell: sudo kill -9 $(lsof -t -i:3002)
  args:
    executable: /bin/bash

...
